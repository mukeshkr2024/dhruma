/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SubmitFilmImport } from './routes/submit-film'
import { Route as FilmLineupImport } from './routes/film-lineup'
import { Route as BecomeASponserImport } from './routes/become-a-sponser'
import { Route as IndexImport } from './routes/index'
import { Route as NewsTitleImport } from './routes/news/$title'

// Create/Update Routes

const SubmitFilmRoute = SubmitFilmImport.update({
  id: '/submit-film',
  path: '/submit-film',
  getParentRoute: () => rootRoute,
} as any)

const FilmLineupRoute = FilmLineupImport.update({
  id: '/film-lineup',
  path: '/film-lineup',
  getParentRoute: () => rootRoute,
} as any)

const BecomeASponserRoute = BecomeASponserImport.update({
  id: '/become-a-sponser',
  path: '/become-a-sponser',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const NewsTitleRoute = NewsTitleImport.update({
  id: '/news/$title',
  path: '/news/$title',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/become-a-sponser': {
      id: '/become-a-sponser'
      path: '/become-a-sponser'
      fullPath: '/become-a-sponser'
      preLoaderRoute: typeof BecomeASponserImport
      parentRoute: typeof rootRoute
    }
    '/film-lineup': {
      id: '/film-lineup'
      path: '/film-lineup'
      fullPath: '/film-lineup'
      preLoaderRoute: typeof FilmLineupImport
      parentRoute: typeof rootRoute
    }
    '/submit-film': {
      id: '/submit-film'
      path: '/submit-film'
      fullPath: '/submit-film'
      preLoaderRoute: typeof SubmitFilmImport
      parentRoute: typeof rootRoute
    }
    '/news/$title': {
      id: '/news/$title'
      path: '/news/$title'
      fullPath: '/news/$title'
      preLoaderRoute: typeof NewsTitleImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/become-a-sponser': typeof BecomeASponserRoute
  '/film-lineup': typeof FilmLineupRoute
  '/submit-film': typeof SubmitFilmRoute
  '/news/$title': typeof NewsTitleRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/become-a-sponser': typeof BecomeASponserRoute
  '/film-lineup': typeof FilmLineupRoute
  '/submit-film': typeof SubmitFilmRoute
  '/news/$title': typeof NewsTitleRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/become-a-sponser': typeof BecomeASponserRoute
  '/film-lineup': typeof FilmLineupRoute
  '/submit-film': typeof SubmitFilmRoute
  '/news/$title': typeof NewsTitleRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/become-a-sponser'
    | '/film-lineup'
    | '/submit-film'
    | '/news/$title'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/become-a-sponser'
    | '/film-lineup'
    | '/submit-film'
    | '/news/$title'
  id:
    | '__root__'
    | '/'
    | '/become-a-sponser'
    | '/film-lineup'
    | '/submit-film'
    | '/news/$title'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BecomeASponserRoute: typeof BecomeASponserRoute
  FilmLineupRoute: typeof FilmLineupRoute
  SubmitFilmRoute: typeof SubmitFilmRoute
  NewsTitleRoute: typeof NewsTitleRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BecomeASponserRoute: BecomeASponserRoute,
  FilmLineupRoute: FilmLineupRoute,
  SubmitFilmRoute: SubmitFilmRoute,
  NewsTitleRoute: NewsTitleRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/become-a-sponser",
        "/film-lineup",
        "/submit-film",
        "/news/$title"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/become-a-sponser": {
      "filePath": "become-a-sponser.tsx"
    },
    "/film-lineup": {
      "filePath": "film-lineup.tsx"
    },
    "/submit-film": {
      "filePath": "submit-film.tsx"
    },
    "/news/$title": {
      "filePath": "news/$title.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
